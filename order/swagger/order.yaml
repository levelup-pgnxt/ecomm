openapi: 3.0.3
info:
  title: Ecomm (Orders) - OpenAPI 3.0
  description: >-
    Test project where a fictitious documentation for PagoNxt and Alura training will be created.
  termsOfService: http://swagger.io/terms/
  contact:
    name: Ana C. A. Ferreira
    url: https://github.com/obeaune
  license:
    name: "License: GPLv3"
    url: https://www.gnu.org/licenses/gpl-3.0.html
  version: 0.0.1
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://mockapi.io
security: 
- auth: []
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        clientId:
          type: string
          format: uuid
        streetDelivery:
          type: string
        cellphoneDelivery:
          type: string
        complementDelivery:
          type: string
        CEPDelivery:
          type: string
        cityDelivery:
          type: string
        stateDelivery:
          type: string
        orderItens:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                format: uuid
              quantity:
                type: integer
              discount:
                type: number
                format: double
              unitPrice:
                type: number
                format: double
        createdAt:
          type: string
          format: date
    Orders:
      type: array
      items:
        $ref: "#/components/schemas/Order"
    NewOrder:
      type: object
      properties:
        clientId:
          type: string
          format: uuid
        streetDelivery:
          type: string
        cellphoneDelivery:
          type: string
        complementDelivery:
          type: string
        CEPDelivery:
          type: string
        cityDelivery:
          type: string
        stateDelivery:
          type: string
        orderItens:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                format: uuid
              quantity:
                type: integer
              discount:
                type: number
                format: double
              unitPrice:
                type: number
                format: double
  securitySchemes:
    auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  - name: Orders
    description: Information about orders
paths:
  /api/order:
    post:
      tags:
      - Orders
      summary: Adds a new order
      security: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewOrder"
      responses:
        201:
          description: Created
          content:
            applicantion/json:
              schema:
                $ref: "#/components/schemas/Order"
  /api/orders:
    get:
      tags:
      - Orders
      summary: Retrieve all orders
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Orders"
        404:
          description: Not Found
          content:
            application/json:
              example: Not Found
  /api/orders/{id}:
    parameters:
    - name: id
      in: path
      schema:
        type: integer
      required: true
    get:
      tags:
      - Orders
      summary: Detail of a specific order
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        404:
          description: Not Found
          content:
            application/json:
              example: Order Not Found

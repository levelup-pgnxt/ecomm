{
  "info": {
    "title": "Ecomm Orders",
    "description": "This API is responsible for the orders' requests and responses in the e-commerce.",
    "version": "0.0.1"
  },
  "paths": {
    "/api/orders/{id}": {
      "get": {
        "summary": "Find order",
        "description": "Find one specific order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order that needs to be fetched",
            "required": true,
            "format": "uuid",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "invalid ID supplied"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    }, 
    "/api/admin/orders": {
      "post": {
        "summary": "Add order",
        "description": "Add new order",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/admin/orders/{id}": {
      "patch": {
        "summary": "Update status",
        "description": "To also confirm the payment and generate invoice on the Payments API, pass the parameter 'idPayment'",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "idPayment": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "swagger": "2.0",
  "definitions": {
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "clienteId": {
          "type": "string"
        },
        "enderecoDeEntrega": {
          "type": "object",
          "properties": {
            "logradouro": {
              "type": "string"
            },
            "numero": {
              "type": "string"
            },
            "complemento": {
              "type": "string"
            },
            "bairro": {
              "type": "string"
            },
            "cep": {
              "type": "string"
            },
            "cidade": {
              "type": "string"
            },
            "uf": {
              "type": "string"
            }
          }
        },
        "itens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Itens"
          }
        }
      }
    },
    "Itens": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "nomeProduto": {
          "type": "string"
        },
        "quantidade": {
          "type": "number",
          "format": "int64"
        },
        "preco": {
          "type": "number",
          "format": "double"
        },
        "valorDesconto": {
          "type": "number",
          "format": "double"
        }
      }
    }
  },
  "x-components": {}
}
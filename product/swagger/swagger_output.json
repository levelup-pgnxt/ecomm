{
  "info": {
    "title": "Ecomm Products",
    "description": "This API is responsible for the products' requests and responses in the e-commerce.",
    "version": "0.0.1"
  },
  "paths": {
    "/api/categories": {
      "get": {
        "summary": "List categories",
        "description": "List all categories",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          }
        },
        "parameters": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/categories/{id}": {
      "get": {
        "summary": "Find category",
        "description": "Find one specific category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of category that needs to be fetched",
            "required": true,
            "format": "uuid",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/admin/categories": {
      "post": {
        "summary": "Add category",
        "description": "Add new category",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/admin/categories/{id}": {
      "put": {
        "summary": "Update category",
        "description": "Update category by entering the whole updated category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of category that needs to be updated",
            "required": true,
            "format": "uuid",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "type": "object",
            "properties": {
              "nome": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "summary": "Update status in category",
        "description": "Update only category status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of category that needs to be updated",
            "required": true,
            "format": "uuid",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "format": "uuid",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "Delete category",
        "description": "Delete category by entering its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of category that needs to be deleted",
            "required": true,
            "format": "uuid",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/products": {
      "get": {
        "summary": "List products",
        "description": "List all products",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        },
        "parameters": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/products/{id}": {
      "get": {
        "summary": "Find product",
        "description": "Find one specific product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product that needs to be fetched",
            "required": true,
            "format": "uuid",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/admin/products": {
      "post": {
        "summary": "Add product",
        "description": "Add new product",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/admin/products/{id}": {
      "put": {
        "summary": "Update product",
        "description": "Update product by entering the whole updated product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product that needs to be updated",
            "required": true,
            "format": "uuid",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "Delete product",
        "description": "Delete product by entering its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product that needs to be deleted",
            "required": true,
            "format": "uuid",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/products/filter": {
      "get": {
        "summary": "Find products by filter",
        "parameters": [
          {
            "name": "minPrice",
            "in": "query",
            "description": "minimum price value that needs to be considered for filter",
            "type": "string"
          },
          {
            "name": "maxPrice",
            "in": "query",
            "description": "maximum price value that needs to be considered for filter",
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "type": "string"
          },
          {
            "name": "stockGreaterThan",
            "in": "query",
            "description": "stockGreaterThan value that needs to be considered for filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "400": {
            "description": "Invalid filter"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "swagger": "2.0",
  "definitions": {
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "nome": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "nome": {
          "type": "string"
        },
        "descricao": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "preco": {
          "type": "number"
        },
        "quantidade": {
          "type": "integer",
          "format": "int64"
        },
        "categoriaid": {
          "type": "string",
          "format": "uuid"
        }
      }
    }
  },
  "x-components": {}
}
openapi: 3.0.3
info:
  title: Ecomm Products
  description: |-
    This API is responsible for the products' requests and responses in the e-commerce.
  version: 0.0.1
paths:
  /api/categories:
    get:
      summary: List categories
      description: List all categories
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
        '404':
          description: not found
        '500':
          description: internal server error
  /api/admin/categories:
    post:
      summary: Add category
      description: Add new category
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: 
                nome:
                  type: string
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Category"
        '500':
          description: internal server error
  /api/categories/{_id}:
    get:
      summary: Find category
      description: Find one specific category
      parameters:
        - name: _id
          in: path
          description: ID of category that needs to be fetched
          required: true
          schema:
            type: object
            properties:
              $oid:
                type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Category"
        '400':
          description: invalid ID supplied
        '404':
          description: not found
        '500':
          description: internal server error
  /api/admin/categories/{_id}:
    put:
      summary: Update category
      description: Update category by entering the whole updated category
      parameters:
      - name: _id
        in: path
        description: ID of category that needs to be updated
        required: true
        schema:
          type: object
          properties:
            $oid:
              type: string
      requestBody:
        content:
          application/json:
            schema:
                $ref: "#/components/schemas/Category"
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Category"
        '400':
          description: invalid ID supplied
        '404':
          description: not found
        '500':
          description: internal server error
    delete:
      summary: Delete category
      description: Delete category by entering its ID
      parameters:
      - name: _id
        in: path
        description: ID of category that needs to be deleted
        required: true
        schema:
          type: object
          properties:
            $oid:
              type: string
      responses:
        '200':
          description: "ok"
        '400':
          description: invalid ID supplied
        '404':
          description: not found
        '500':
          description: internal server error
    patch:
      summary: Update status in category
      description: Update only category status
      parameters:
      - name: _id
        in: path
        description: ID of category that needs to be updated
        required: true
        schema:
          type: object
          properties:
            $oid:
              type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Category"
        '400':
          description: invalid ID supplied
        '404':
          description: not found
        '500':
          description: internal server error
  /api/products:
    get:
      summary: List products
      description: List all products
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        '404':
          description: not found
        '500':
          description: internal server error
  /api/admin/products:
    post:
      summary: Add product
      description: Add new product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: 
                nome:
                  type: string
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Product"
        '404':
          description: not found
        '500':
          description: internal server error
  /api/products/{_id}:
    get:
      summary: Find product
      description: Find one specific product
      parameters:
        - name: _id
          in: path
          description: ID of product that needs to be fetched
          required: true
          schema:
            type: object
            properties:
              $oid:
                type: string
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Product"
        '400':
          description: invalid ID supplied
        '404':
          description: not found
        '500':
          description: internal server error
  /api/admin/products/{_id}:
    put:
      summary: Update product
      description: Update product by entering the whole updated product
      parameters:
      - name: _id
        in: path
        description: ID of product that needs to be updated
        required: true
        schema:
          type: object
          properties:
            $oid:
              type: string
      requestBody:
        content:
          application/json:
            schema:
                $ref: "#/components/schemas/Product"
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Product"
        '400':
          description: invalid ID supplied
        '404':
          description: not found
        '500':
          description: internal server error
    delete:
      summary: Delete product
      description: Delete product by entering its ID
      parameters:
      - name: _id
        in: path
        description: ID of product that needs to be deleted
        required: true
        schema:
          type: object
          properties:
            $oid:
              type: string
      responses:
        '200':
          description: "ok"
        '400':
          description: invalid ID supplied
        '404':
          description: not found
        '500':
          description: internal server error
components:
  schemas:
    Category:
      type: object
      properties:
        _id:
          type: object
          properties:
            $oid:
              type: string
        nome:
          type: string
        status:
          type: string
    Product:
      type: object
      properties:
        _id:
          type: object
          properties:
            $oid:
              type: string
        nome:
          type: string
        descricao:
          type: string
        slug:
          type: string
        preco:
          type: number
        quantidade:
          type: integer
          format: int64
        categoria:
          type: object
          properties:
            nome:
              type: string
            categoria_id:
              type: object
              properties:
                $oid:
                  type: string